//
// MEDIA WIDTHS/HEIGHTS
// ====================
//

// Fallback variables
$no-mq ?= false
$width--fixed-min ?= 960px
$width--fixed-max ?= 1200px


//
// WIDTH BASED
//

width-min($a)
  require-unit($a)
  +_media('width', 'min', $a)
    {block}

width-max($a)
  require-unit($a)
  +_media('width', 'max', $a)
    {block}

width-range($a, $b)
  require-unit($a)
  require-unit($b)
  +_media('width', 'range', $a, $b)
    {block}


//
// HEIGHT BASED
//

height-min($a)
  require-unit($a)
  +_media('height', 'min', $a)
    {block}

height-max($a)
  require-unit($a)
  +_media('height', 'max', $a)
    {block}

height-range($a, $b)
  require-unit($a)
  require-unit($b)
  +_media('height', 'range', $a, $b)
    {block}


//
// MEDIA QUERY BUILDER
// This mixin should not be called directly
//

_media($direction, $type, $a, $b = false)

  if ($no-mq == true)
    +_no-media($direction, $type, $a, $b)
      {block}

  else

    $mq = ''
    if ($type == 'min' || $type == 'max')
      $mq = 'screen and (' + $type + '-' + $direction + ': ' + $a + ')'
    if ($type == 'range')
      $mq = 'screen and (min-' + $direction + ': ' + $a + ') and (max-' + $direction + ': ' + $b + ')'

    @media $mq
      {block}


//
// NO-MEDIA QUERY BUILDER
// This mixin should not be called directly
//

_no-media($direction, $type, $a, $b)
  if ($direction == 'width')
    if ($type == 'min')
      if ($width--fixed-min >= $a)
        {block}
    else if ($type == 'max')
      if ($width--fixed-max <= $a)
        {block}
    else if ($type == 'range')
      if ($width--fixed-min >= $a && $width--fixed-max <= $b)
        {block}

  else if ($direction == 'height')
    // No defaults set for height
